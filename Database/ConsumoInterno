CREATE OR REPLACE FUNCTION close_order(
  p_order_id UUID,
  p_tip NUMERIC,                -- propina capturada al cierre (puede ser 0)
  p_payment_method payment_method,  -- 'CASH','CARD','TRANSFER','VOUCHER' (se ignora si es interna)
  p_cash_session_id UUID,       -- sesión de caja (NULL si no aplica)
  p_is_internal BOOLEAN,        -- TRUE = consumo interno
  p_warehouse_id UUID           -- tu bodega única
)
RETURNS VOID AS $$
DECLARE
  v_kind TEXT;
  v_total NUMERIC(12,2);
  v_payment_id UUID;
BEGIN
  -- Set tip y recalcula totales
  UPDATE orders SET tip = COALESCE(p_tip,0) WHERE id = p_order_id;
  PERFORM recalc_order_totals(p_order_id);

  -- Consumir inventario si aún no se ha hecho
  PERFORM consume_inventory_for_order(p_order_id, p_warehouse_id);

  SELECT kind, total INTO v_kind, v_total FROM orders WHERE id = p_order_id FOR UPDATE;

  IF p_is_internal THEN
    -- Forzar etiqueta de interna
    UPDATE orders SET kind = 'INTERNAL' WHERE id = p_order_id;

    -- Registrar cierre con método INTERNAL (no afecta caja real)
    INSERT INTO payments (method, amount, tip, received_at, cash_session_id, ref)
    VALUES ('INTERNAL', v_total, COALESCE(p_tip,0), now(), NULL, 'internal-consumption')
    RETURNING id INTO v_payment_id;
  ELSE
    -- Pago normal
    INSERT INTO payments (method, amount, tip, received_at, cash_session_id)
    VALUES (p_payment_method, v_total, COALESCE(p_tip,0), now(), p_cash_session_id)
    RETURNING id INTO v_payment_id;
  END IF;

  INSERT INTO payment_allocations (payment_id, order_id, applied_amount)
  VALUES (v_payment_id, p_order_id, v_total);

  -- Cerrar orden
  UPDATE orders
     SET status   = 'CLOSED',
         closed_at= now()
   WHERE id = p_order_id;
END;
$$ LANGUAGE plpgsql;
